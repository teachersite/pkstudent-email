{"version":3,"sources":["components/GetEmail.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["themeBlue","createMuiTheme","palette","createPalette","primary","main","dark","light","secondary","typography","fontFamily","join","override","css","MyClassroom","props","state","renderMsg","term","terms","class","isHR","isSub","data","color","theme","renderData","googleData","stateReady","loading","item","emails","onHeaderTyped","setState","onHeaderTypedEnd","doSomethingThenCall","n","handleChange","event","target","value","getingEmail","Tabletop","init","key","callback","console","log","year","map","obj","push","uniq","Set","simpleSheet","p","em","this","email","o","Math","round","r","random","classes","className","Typography","variant","style","marginTop","avgTypingDelay","startDelay","onTypingDone","FormControl","minWidth","InputLabel","id","Select","labelId","onChange","label","MenuItem","index","length","size","Paper","paper","marginBottom","height","width","backgroundColor","paddingTop","paddingBottom","root","copied","text","onCopy","Button","position","top","right","TableContainer","component","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","title","name","lastname","React","Component","withStyles","flexGrow","marginLeft","spacing","textAlign","App","GetEmail","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.4314e9e0.chunk.js","sourcesContent":["import React from \"react\";\nimport logo from \"../logo.svg\";\nimport \"../index.css\";\nimport Typist from \"react-typist\";\nimport {\n  AwesomeButton,\n  AwesomeButtonProgress,\n  AwesomeButtonSocial,\n} from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport Button from '@material-ui/core/Button';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport { css } from \"@emotion/core\";\nimport HashLoader from \"react-spinners/HashLoader\";\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport Typography from '@material-ui/core/Typography';import {\n    fade,\n    makeStyles,\n    createMuiTheme,\n    Theme,\n    ThemeProvider,\n    MuiThemeProvider,\n  } from \"@material-ui/core/styles\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport createPalette from \"@material-ui/core/styles/createPalette\";\nimport Tabletop from \"tabletop\";\n\nconst useStyles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginLeft: theme.spacing(1),\n      },\n      paper: {\n          minWidth: \"100%\",\n        marginTop: theme.spacing(0),\n        textAlign: 'center',\n      },\n      typography: {\n        fontFamily: [\n          'Prompt',\n          'sans-serif'\n        ].join(','),\n      }\n});\nconst themeBlue = createMuiTheme({\n    palette: createPalette({\n      primary: {\n        //teal\n        main: \"#80cbc4\",\n        dark: \"#4f9a94\",\n        light: \"#b2fef7\",\n      },\n      secondary: {\n        //pink\n        main: \"#ffab91\",\n        dark: \"#c97b63\",\n        light: \"#ffddc1\",\n      },\n    }),\n    typography: {\n      fontFamily: [\n        'Sarabun',\n        'sans-serif'\n      ].join(','),\n    }\n  });\n  const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  top: 5vh;\n`;\nclass MyClassroom extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    renderMsg: false,\n    term: \"เลือกห้องที่ต้องการ\",\n    terms: [],\n    class: [\"1/1\", \"1/10\", \"2/2\",],\n    isHR: false,\n    isSub: false,\n    data: [],\n    color: \"\",\n    theme: themeBlue,\n    renderData: [],\n    googleData: [],\n    stateReady: 0,\n    loading: true,\n    item: 0,\n    emails: [],\n  };\n  \n  componentDidMount() {\n    Tabletop.init({\n      key: \"1-Y-h83SJ2-Ef-qSDCdRMdv6v3Yhek1_pTEKlLSqKY1U\",\n      callback: (googleData) => {\n        console.log(\"google sheet data --->\", googleData);\n        this.setState({googleData: googleData});\n          var year = [];\n          googleData.map((obj) => {\n            year.push(obj.term+\" ห้อง \"+obj.class);\n          })\n          let uniq = [...new Set(year)];\n\n          this.setState({terms: uniq, isSub: true});\n      },\n      simpleSheet: true,\n    });\n};\n  onHeaderTyped = () => {\n    this.setState({ renderMsg: true });\n  };\n\n  onHeaderTypedEnd = () => {\n    this.setState({ renderMsg: false });\n  };\n\n  doSomethingThenCall = (n) => {\n    //this.props.history.push('/myclassroom/'+n);\n    //this.setState({stateReady: n});\n    if(n===1){\n        this.setState({isHR: true, isSub: false,})\n    } else if(n===2){\n        this.setState({isHR: false, isSub: true,})\n    } else {\n        this.setState({isHR: false, isSub: false,})\n    }\n    \n  };\n   handleChange = (event) => {\n    this.setState({term: event.target.value});\n    this.getingEmail(event.target.value);\n  };\n\n  getingEmail(event){\n      var p = [];\n      var em = \"\";\n      this.state.googleData.map((obj) => {\n        var v = obj.term+\" ห้อง \"+obj.class;\n        if(v===event){\n            p.push(obj);\n            if(em===\"\"){\n                em = obj.email ;\n            } else {\n                em = em+\",\"+obj.email ;\n            }\n            \n        }\n      })\n    this.setState({renderData: p, loading: false, emails: em});\n    console.log(p);\n  };\n  \n  \n\n  random_rgba() {\n    var o = Math.round, r = Math.random, s = 255;\n    return 'rgba(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + 0.3 + ')';\n}\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <MuiThemeProvider theme={this.state.theme}> \n      <div className=\"App\">\n        <div className=\"App-header\">\n        {!this.state.isSub ? (\n          <Typist\n            className=\"TypistExample-header\"\n            avgTypingDelay={50}\n            startDelay={1000}\n            onTypingDone={this.onHeaderTypedEnd}\n          >\n            โปรดรอสักครู่ครับ\n          </Typist>\n        ):(\n            <Typography variant=\"h6\" style={{marginTop: \"15px\"}}>\n            เลือกชั้นเรียนที่ต้องการ\n            </Typography>\n        )\n  }\n          <div>\n        {this.state.isSub && (\n            <div>\n            <br></br>\n            <FormControl variant=\"outlined\" \n            color=\"secondary\" style={{minWidth: \"50vw\", }}>\n                    <InputLabel id=\"demo-simple-select-outlined-label\"\n                    >เลือกชั้นเรียน</InputLabel>\n                    <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={this.state.term}\n                    onChange={this.handleChange}\n                    label=\"ปีการศึกษา\"\n                    >\n                    <MenuItem value=\"\">\n                        <em></em>\n                    </MenuItem>\n                    {this.state.terms.map((item,index) => (\n                        <MenuItem key={index} value={item}>{item}</MenuItem>\n                    ))}\n                    </Select>\n            </FormControl>\n            </div>\n        )}\n         {this.state.loading && this.state.data.length===0 ? (\n      <HashLoader\n      css={override}\n      size={50}\n      color=\"#FFF\"\n      loading={this.state.loading}\n    />\n      )\n      :(\n        <Paper className={classes.paper} style={{marginBottom: \"1vw\", height: \"100%\", width:\"98vw\",backgroundColor: \"rgba(255,255,255,0.6)\", paddingTop: \"20px\",paddingBottom: \"20px\", marginTop: \"20px\"  }}>\n        <div className={classes.root}>\n        {this.state.renderData.length > 0 && (\n          <Typography variant=\"subtitle1\" >\n              {this.state.copied ? <span style={{color: 'red'}}>คัดลอกอีเมล</span> : null}&ensp;\n              นักเรียน {this.state.term} จำนวน {this.state.renderData.length} คน\n            <CopyToClipboard text={this.state.emails}\n            onCopy={() => this.setState({copied: true})}>\n            <Button variant=\"contained\" color=\"secondary\" style={{position: \"absolute\", top: \"5px\", right: \"5px\"}}>คัดลอกอีเมลนักเรียนทั้งหมด</Button>\n          </CopyToClipboard>\n          &ensp;\n          {this.state.copied ? <span style={{color: 'red'}}>เรียบร้อย</span> : null}\n          </Typography>\n        )}\n        {this.state.renderData.length > 0 && (\n      <TableContainer component={Paper}>\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ชั้น</TableCell>\n            <TableCell align=\"center\">ห้อง</TableCell>\n            <TableCell align=\"center\">รหัสนักเรียน</TableCell>\n            <TableCell align=\"left\">คำนำหน้า</TableCell>\n            <TableCell align=\"left\">ชื่อ</TableCell>\n            <TableCell align=\"left\">สกุล</TableCell>\n            <TableCell align=\"left\">อีเมล</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {this.state.renderData.map((row,index) => (\n            <TableRow key={index}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.term}\n              </TableCell>\n              <TableCell align=\"center\">{row.class}</TableCell>\n              <TableCell align=\"center\">{row.id}</TableCell>\n              <TableCell align=\"left\">{row.title}</TableCell>\n              <TableCell align=\"left\">{row.name}</TableCell>\n              <TableCell align=\"left\">{row.lastname}</TableCell>\n              <TableCell align=\"left\">{row.email}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n      )}\n    </div>\n      </Paper>)}\n        </div>\n        \n        </div>\n       \n      </div>\n      </MuiThemeProvider>\n    );\n  }\n}\nexport default withStyles(useStyles)(MyClassroom);\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport GetEmail from './components/GetEmail';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{fontFamily: \"Sarabun\"}}>\n      <header className=\"App-header\" style={{fontFamily: \"Sarabun\"}}>\n        <GetEmail></GetEmail>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}